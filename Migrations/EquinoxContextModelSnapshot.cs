// <auto-generated />
using System;
using Equinox.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Equinox.Migrations
{
    [DbContext(typeof(EquinoxContext))]
    partial class EquinoxContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("Equinox.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EquinoxClassId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookingId");

                    b.HasIndex("EquinoxClassId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Equinox.Models.ClassCategory", b =>
                {
                    b.Property<int>("ClassCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ClassCategoryId");

                    b.ToTable("ClassCategories");

                    b.HasData(
                        new
                        {
                            ClassCategoryId = 1,
                            Name = "Boxing"
                        },
                        new
                        {
                            ClassCategoryId = 2,
                            Name = "Yoga"
                        },
                        new
                        {
                            ClassCategoryId = 3,
                            Name = "HIIT"
                        });
                });

            modelBuilder.Entity("Equinox.Models.Club", b =>
                {
                    b.Property<int>("ClubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ClubId");

                    b.ToTable("Clubs");

                    b.HasData(
                        new
                        {
                            ClubId = 1,
                            Name = "Chicago Loop",
                            PhoneNumber = "312-000-0001"
                        },
                        new
                        {
                            ClubId = 2,
                            Name = "West Chicago",
                            PhoneNumber = "312-000-0002"
                        },
                        new
                        {
                            ClubId = 3,
                            Name = "Lincoln Park",
                            PhoneNumber = "312-000-0003"
                        });
                });

            modelBuilder.Entity("Equinox.Models.EquinoxClass", b =>
                {
                    b.Property<int>("EquinoxClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassDay")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClassPicture")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ClubId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CoachId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EquinoxClassId");

                    b.HasIndex("ClassCategoryId");

                    b.HasIndex("ClubId");

                    b.HasIndex("CoachId");

                    b.ToTable("EquinoxClasses");

                    b.HasData(
                        new
                        {
                            EquinoxClassId = 1,
                            ClassCategoryId = 1,
                            ClassDay = "Monday",
                            ClassPicture = "boxing101.jpg",
                            ClubId = 1,
                            CoachId = 1,
                            Name = "Boxing 101",
                            Time = "8 AM – 9 AM"
                        },
                        new
                        {
                            EquinoxClassId = 2,
                            ClassCategoryId = 2,
                            ClassDay = "Wednesday",
                            ClassPicture = "hatha.jpg",
                            ClubId = 2,
                            CoachId = 2,
                            Name = "Hatha Yoga",
                            Time = "6 PM – 7 PM"
                        },
                        new
                        {
                            EquinoxClassId = 3,
                            ClassCategoryId = 3,
                            ClassDay = "Friday",
                            ClassPicture = "hiitjunior.jpg",
                            ClubId = 3,
                            CoachId = 1,
                            Name = "HIIT Junior",
                            Time = "5 PM – 6 PM"
                        });
                });

            modelBuilder.Entity("Equinox.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCoach")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DOB = new DateTime(1985, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mike@equinox.com",
                            IsCoach = true,
                            Name = "Coach Mike",
                            PhoneNumber = "555-1111"
                        },
                        new
                        {
                            UserId = 2,
                            DOB = new DateTime(1990, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lisa@equinox.com",
                            IsCoach = true,
                            Name = "Coach Lisa",
                            PhoneNumber = "555-2222"
                        });
                });

            modelBuilder.Entity("Equinox.Models.Booking", b =>
                {
                    b.HasOne("Equinox.Models.EquinoxClass", "EquinoxClass")
                        .WithMany()
                        .HasForeignKey("EquinoxClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquinoxClass");
                });

            modelBuilder.Entity("Equinox.Models.EquinoxClass", b =>
                {
                    b.HasOne("Equinox.Models.ClassCategory", "ClassCategory")
                        .WithMany("EquinoxClasses")
                        .HasForeignKey("ClassCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Equinox.Models.Club", "Club")
                        .WithMany("EquinoxClasses")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Equinox.Models.User", "Coach")
                        .WithMany("EquinoxClasses")
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassCategory");

                    b.Navigation("Club");

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("Equinox.Models.ClassCategory", b =>
                {
                    b.Navigation("EquinoxClasses");
                });

            modelBuilder.Entity("Equinox.Models.Club", b =>
                {
                    b.Navigation("EquinoxClasses");
                });

            modelBuilder.Entity("Equinox.Models.User", b =>
                {
                    b.Navigation("EquinoxClasses");
                });
#pragma warning restore 612, 618
        }
    }
}
